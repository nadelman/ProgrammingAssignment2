ggplot(data.frame(x=x, y=y), aes(x=x, y=y)) + geom_line()
customdata2 <- subset(custdata, (custdata$age > 0 & custdata$age < 100 & custdata$income > 0))
customdata2
cor(custdata2$age, custdata2$income)
cor(customdata2$age, customdata2$income)
ggplot(customdata2, aes(x=age, y=income)) + geom_point + ylim(0,200000)
ggplot(customdata2, aes(x=age, y=income)) + geom_point() + ylim(0,200000)
ggplot(customdata2, aes(x=age, y=income)) + geom_point() + stat_smooth(method="lm") + ylim(0,200000)
ggplot(customdata2, aes(x=age, y=income)) + geom_point() + geom_smooth() + ylim(0,200000)
gglot(customdata2, aes(x=age, y=as.numeric(health.ins))) + geom_point(position=position_jitter(w-0.5, h=0.5)) + geom_smooth()
ggplot(customdata2, aes(x=age, y=as.numeric(health.ins))) + geom_point(position=position_jitter(w-0.5, h=0.5)) + geom_smooth()
ggplot(customdata2, aes(x=age, y=as.numeric(health.ins))) + geom_point(position=position_jitter(w=0.5, h=0.5)) + geom_smooth()
summary(customdata2)
ggplot(customdata2, aes(x=age, y=as.numeric(health.ins))) + geom_point(position=position_jitter(w=0.5, h=0.5)) + geom_smooth()
ggplot(customdata2, aes(x=age, y=as.numeric(health.ins))) + geom_point(position=position_jitter(w=0.5, h=0.5)) + geom_smooth()
temp <- table(customdata2$age, y=as.numeric(customdata2$health.ins)))
temp <- table(customdata2$age, y=as.numeric(customdata2$health.ins))
temp
temp <- table(customdata2$age, as.numeric(customdata2$health.ins))
temp
as.numeric(customdata2$health.ins)
ggplot(custdata2, aes(x=age, y=as.numeric(health.ins))) + geom_point(position=position_jitter(w=0.05, h=0.05)) + geom_smooth()
ggplot(customdata2, aes(x=age, y=as.numeric(health.ins))) + geom_point(position=position_jitter(w=0.05, h=0.05)) + geom_smooth()
ggplot(customdata2, aes(x=age, y=as.numeric(health.ins))) + geom_point(position=position_jitter(w=0.5, h=0.5)) + geom_smooth()
install package("hexbin")
install package(hexbin)
install("hexbin")
install.packages("hexbin")
library(hexbin)
cor
ggplot(custdata2, aes(x=age, y=income)) + geom_hex(binwidth=c(5, 10000)) + geom_smooth(color="white", se=F) + ylim(0,200000)
ggplot(customdata2, aes(x=age, y=income)) + geom_hex(binwidth=c(5, 10000)) + geom_smooth(color="white", se=F) + ylim(0,200000)
gggplot(customdata2) + geom_bar(aes(x=marital.stat, fill=health.ins))
ggplot(customdata2) + geom_bar(aes(x=marital.stat, fill=health.ins))
ggplot(customdata2) + geom_bar(aes(x=marital.stat, fill=health.ins, position="fill"))
ggplot(customdata2) + geom_bar(aes(x=marital.stat, fill=health.ins, position="dodge"))
ggplot(customdata2) + geom_bar(aes(x=marital.stat, fill=health.ins), position="dodge")
ggplot(customdata2) + geom_bar(aes(x=marital.stat, fill=health.ins), position="fill")
ggplot(customdata2) + geom_bar(aes(x=marital.stat, fill=martial.stat), position="dodge")
ggplot(customdata2) + geom_bar(aes(x=housing.type, fill=health.ins), position="fill")
ggplot(customdata2) + geom_bar(aes(x=housing.type, fill=health.ins), position="dodge")
ggplot(custdata2) + geom_bar(aes(x=housing.type, fill=marital.stat ), position="dodge") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(customdata2) + geom_bar(aes(x=housing.type, fill=marital.stat ), position="dodge") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
dpus
head(dpus)
dpus <- dbGetQuery(con,'SELECT pus.* FROM pus WHERE pus."SERIALNO" IN (SELECT DISTINCT hus."SERIALNO" FROM hus WHERE hus."ORIGRANDGROUP"<=1)');
# From: http://archive.ics.uci.edu/ml/datasets/Statlog+(German+Credit+Data)
vARS
vars
head(d)
table(d$Job, d$Savings.account.bonds)
head(table(d$Job, d$Savings.account.bonds))
head(table(d$Job, d$foreign.worker))
summary(d)
summary(mtcars)
attach(mtcars)
summary(mpg)
plot(mpg, disp)
plot(mpg, wt)
detach(mtcars)
plot(mpg, wt)
with(mtcars, {
summary(mpg, disp, wt)
plot(mpg, disp)
plot(mpg, wt)
})
source('~/rwork/ria/temp.R')
source('~/rwork/ria/temp.R')
testData = data.frame(personId=numeric(0), bmi=numeric(0), incentive.max=numeric(0), incentive.obtained=numeric(0), incentive.percentage=numeric(0), date=timestamp(0))
##------ 0 ------##
testData = data.frame(personId=numeric(0), bmi=numeric(0), incentive.max=numeric(0), incentive_obtained=numeric(0), incentive_percentage=numeric(0))
edit(testData)
library(xlsx)
library(RODBC)
install.packaged("RODBC","xlsx")
install.packages("RODBC","xlsx")
library(RODBC)
library(xlsx)
channel <- odbcConnectExcel("/Users/nadelman/rwork/ria/transactions_excel.xls")
library(xlsx)
install.packages("xlsx")
library(xlsx)
txnDataFrame <- read.xlsx("/Users/nadelman/rwork/ria/transactions_excel.xls", 1)
txnDataFrame
head(txnDataFrame)
help(head)
help(head,20)
head(txnDataFrame, 20)
plot(txnDataFrame$Category, txnDataFrame$Amount)
plot(txnDataFrame$Date, txnDataFrame$Amount)
plot(txnDataFrame$Date, txnDataFrame$Amount)
help(date)
txnDataFrame$Date <- as.Date(txnDataFrame$Date, "%m/%d/%Y")
plot(txnDataFrame$Date, txnDataFrame$Amount)
summary(txn)
install.packages('shiny')
library(shiny)
runExample("01_hello")
runExample("02_text")
ls()
attach(mtcars)
summary(mtcars)
plot(weight, mpg)
plot(st, mpg)
plot(wt, mpg)
abline(lm(mpg~wt))
abline(lm(wt~mpg))
title("Regression of MPG on Weight")
detach(mtcars)
boxplot(mtcars)
boxplot(mtcars$mpg)
boxplot(mtcars$mpg, mtcars$wt)
dose  <- c(20, 30, 40, 45, 60)
drugA <- c(16, 20, 27, 40, 60)
drugB <- c(15, 18, 25, 31, 40)
plot(dose, drugA, type="b" )
plot(dose, drugA, type="b", lty=2, pch=17)
plot(dose, drugA, type="b", pch=19, lty=2, col="red")
plot(dose, drugB, type="b", pch=23, lty=6, col="blue", bg="green")
plot(dose, drugA, type="b", lty=2, pch=17)
plot(dose, drugA, type="b", pch=19, lty=2, col="red")
plot(dose, drugB, type="b", pch=23, lty=6, col="blue", bg="green")
plot(dose, c(drugA, drugB))
help plot
plot(dose, drugA, type="b", pch=19, lty=2, col="red")
plot(dose, drugB, type="b", pch=23, lty=6, col="blue", bg="green")
lines(dose, drugA, type="b", pch=22, col="blue", lty=2)
lines(lm(dose~drugA))
abline(c(1..10))
abline(h=c(1..10))
abline(h=c(1,10,100))
abline(lm(dose~drugA))
attach(mtcars)
opar <- par(no.readonly=TRUE)
par(mfrow=c(3,1))
hist(wt)
hist(mpg)
hist(disp)
par(opar)
detach(mtcars)
manager <- c(1, 2, 3, 4, 5)
date <- c("10/24/08", "10/28/08", "10/1/08", "10/12/08", "5/1/09")
country <- c("US", "US", "UK", "UK", "UK")
gender <- c("M", "F", "F", "M", "F")
age <- c(32, 45, 25, 39, 99)
q1 <- c(5, 3, 3, 3, 2)
q2 <- c(4, 5, 5, 3, 2)
q3 <- c(5, 2, 5, 4, 1)
q4 <- c(5, 5, 5, NA, 2)
q5 <- c(5, 5, 2, NA, 1)
leadership <- data.frame(manager, date, country, gender, age,
q1, q2, q3, q4, q5, stringsAsFactors=FALSE)
leadership
leadership$age[leadership$age == 99] <- NA
leadership
leadership$agecat[leadership$age >= 75] <- "old"
leadership
leadership$agecat[leadership$age < 75 && leadership$age >=35] <- "middle age"
leadership
leadership$agecat[leadership$age < 75 & leadership$age >=35] <- "middle age"
leadership
leadership$agecat[leadership$age < 35] <- "young"
leadership
fix(leadership)
leadership
names(leadership)
runApp("App-1")
source('~/rwork/pract_ds_with_r/ch2/test1.R')
runApp("App-2")
swirl()
library(swirl)
swirl()
x <- c(44,5,NA)
x <- c(44,NA,5,NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
myData <- sample(x(y,z), 100)
myData <- sample(c(y,z), 100)
myNA <- is.na(myData)
myNA
myData == NA
sum(myNA)
myData
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(fool=11, bar=2, norf=NA)
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo", "var")]
vect[c("foo", "bar")]
source("submitscript1.R")
getwd()
setwd("/Users//nadelman//rwork//johnHopkins/programmingWithR/assignments/assignment1/")
source("submitscript1.R")
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
rt <- c()
length(rt)
class(rt)
type(rt)
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corr.R')
runningVals <- c(0)
length(runningVals)
rm(runningVals)
ls()
submit()
9
submit()
submit()
source("corr.R")
cr <- corr("testdata", 1)
cr
submit()
submit()
submit()
cr <- corr("specdata")
summary(cr)
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corr.R')
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corr.R')
cr <- corr("specdata", 400)
summary(cr)
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corr.R')
cr <- corr("specdata", 400)
summary(cr)
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corr.R')
cr <- corr("specdata", 400)
summary(cr)
lapply
?round
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corr.R')
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corr.R')
cr <- corr("specdata", 400)
head(cr)
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corr.R')
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corr.R')
cr <- corr("specdata", 400)
head(cr)
?cor
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corr.R')
cr <- corr("specdata", 400)
head(cr)
d <- read.csv("/Users//nadelman/rwork/specdata/001.csv")
d
sum(complete.cases(d))
d1 <- complete.cases(d)
d1
d[d1]
d[[d1]]
?subset
d1 <- subset(d, complete.cases(d))
d1
length(d1)
d1
length d1[,1]
length(d1[,1])
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corr.R')
cr <- corr("specdata", 150)
head(cr)
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corr.R')
cr <- corr("specdata", 150)
head(cr)
head(signif(cr,4))
summary(cr)
summary(signif(cr,4))
signif(summary(cr),4)
signif(summary(cr),3)
corr("specdata",5000)
cr <- corr("specdata",5000)
summary(cr)
summary(c())
submit()
?list.files
?replace
?gsub
?write.csv
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/completeCasesFilter.R')
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/completeCasesFilter.R')
completeCasesFilter("specdata", "completeCasesFilter")
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/completeCasesFilter.R')
completeCasesFilter("specdata", "completeCasesFilter")
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/completeCasesFilter.R')
completeCasesFilter("specdata", "completeCasesFilter")
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/completeCasesFilter.R')
completeCasesFilter("specdata", "completeCasesFilter")
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/completeCasesFilter.R')
completeCasesFilter("specdata", "completeCasesFilter")
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/completeCasesFilter.R')
completeCasesFilter("specdata", "completeCasesFilter")
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/completeCasesFilter.R')
completeCasesFilter("specdata", "completeCasesFilter")
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/completeCasesFilter.R')
completeCasesFilter("specdata", "completeCasesFilter")
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/completeCasesFilter.R')
completeCasesFilter("specdata", "completeCasesFilter")
completeCasesFilter("specdata", "specdataFiltered")
ls()
d
d
d1 <- subset(d, (!is.na(d$sulfate) && !is.na(d$nitrate)))
d1
d1 <- subset(d, (!is.na(d$sulfate) & !is.na(d$nitrate)))
d1
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corr.R')
cr <- corr("specdata", 150)
summary(cr)
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corr.R')
cr <- corr("specdata", 150)
summary(cr)
?package
??package
install("RUnit")
install.packages("RUnit")
library(RUnit)
?runit
??runit
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corrTests.R')
test.corr150
test.corr150()
test.corr150()
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corrTests.R')
test.corr150()
summary(d)
summary(d$sulfate)
summary(d$sulfate)[0]
summary(d$sulfate)$Min
summary(d$sulfate)$min
s <- summary(d$sulfate)
class(s)
s[0
s[0]
s[0,0]
s[,0]
dim(s)
names(s)
s
s[0]
s[[0]]
s[[1]]
s[[]]
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corrTests.R')
test.corr150()
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corrTests.R')
test.corr150()
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corrTests.R')
test.corr150()
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corrTests.R')
test.corr150()
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corrTests.R')
test.corr150()
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corrTests.R')
test.corr150()
test.corr150()
?checkEquals
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corrTests.R')
test.corr150()
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corrTests.R')
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corrTests.R')
test.corr150()
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corrTests.R')
test.corr150()
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corrTests.R')
test.corr150()
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment1/corrTests.R')
test.corr150(0.001)
test.corr150(0.0005)
?cor
source('~/rwork/johnHopkins/programmingWithR/assignments/rprog2/assignment1/corr.R')
getwd()
cr <- corr("specdata", 400)
cr
head(cr)
test.corr400(0.001)
source('~/rwork/johnHopkins/programmingWithR/assignments/rprog2/assignment1/corrTests.R')
test.corr400(0.001)
source('~/rwork/johnHopkins/programmingWithR/assignments/rprog2/assignment1/corrTests.R')
test.corr400(0.001)
test.corr0(0.001)
source('~/rwork/johnHopkins/programmingWithR/assignments/rprog2/assignment1/corrTests.R')
source('~/rwork/johnHopkins/programmingWithR/assignments/rprog2/assignment1/corrTests.R')
test.corr0(0.001)
source('~/rwork/johnHopkins/programmingWithR/assignments/rprog2/assignment1/corrTests.R')
test.corr0(0.001)
source('~/rwork/johnHopkins/programmingWithR/assignments/rprog2/assignment1/corrTests.R')
test.corr0(0.001)
source('~/rwork/johnHopkins/programmingWithR/assignments/rprog2/assignment1/corrTests.R')
test.corr0(0.001)
test.corr0(0.01)
test.corr0(0.005)
options(digits = 4)
test.corr0(0.005)
test.corr150(0.005)
test.corr400(0.005)
test.corr400(0.000)
test.corr400(0.000001)
test.corr400(0.0001)
options(digits = 4)
test.corr400(0.0001)
submit()
test.corr5000()
test.corr5000()
source('~/rwork/johnHopkins/programmingWithR/assignments/rprog2/assignment1/corrTests.R')
source('~/rwork/johnHopkins/programmingWithR/assignments/rprog2/assignment1/corrTests.R')
test.corr5000()
source('~/rwork/johnHopkins/programmingWithR/assignments/rprog2/assignment1/corrTests.R')
test.corr5000()
source('~/rwork/johnHopkins/programmingWithR/assignments/rprog2/assignment1/corr.R')
test.corr5000()
source('~/.active-rstudio-document')
source('~/rwork/johnHopkins/programmingWithR/assignments/rprog2/assignment1/corr.R')
submit()
source('~/rwork/johnHopkins/programmingWithR/assignments/rprog2/assignment1/corr.R')
submit()
getwd()
setwd("/Users/nadelman/rwork/johnHopkins/programmingWithR/assignments/assignment2/ProgrammingAssignment2")
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment2/ProgrammingAssignment2/cachevector.R')
testVector <- c(2,4,5,6)
mean(testVector)
v <- makeVector(testVector)
v
v()
v$getmean()
cachemean(v)
v$getmean()
v2 <- c(2,4,7,8,9,0,12)
v2 <- makeVector(v2)
v2
v2.get()
v2$get()
v2$get
v2$getmean()
cachemean(v2)
cachemean(v2)
v2$getmean
v2$getmean()
v$getmean()
v2.getmean()
v2
testVector2 <- c(1,2,3,1,2,3,4,6,12,33,4132)
v2 <- makeVector(testVector2)
v2.get()
v2
v2.get
v2$get()
v2$getmean()
cachemean(v2)
v2$getmean()
?inverse
??inverse
?matrix
??inverse
?pinv
?inv
??inv
?ginv
?solve
?matrix
mdat <- matrix(c(1,2,3, 11,12,13), nrow = 2, ncol = 3, byrow = TRUE,
dimnames = list(c("row1", "row2"),
c("C.1", "C.2", "C.3")))
mat
mdat
rm(mdat)
inputMatrix <-  matrix(c(1,2,3, 11,12,13, 21, 22, 23), nrow = 3, ncol = 3)
solve(inputMatrix)
inputMatrix <-  matrix(c(1,2,3, 4,5,6, 7,8,9), nrow = 3, ncol = 3)
solve(inputMatrix)
inputMatrix <-  matrix(c(1,2,3,6,5,4,9,0,1), nrow = 3, ncol = 3)
solve(inputMatrix)
?runit
??runit
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment2/ProgrammingAssignment2/cachematrix.R')
test <- makeCacheMatrix(inputMatrix)
test$get()
test$getinv()
out1 <- solve(inputMatrix)
out1
out2 <- cacheSolve(inputMatrix)
out2 <- cacheSolve(test)
test$get()
test$getinv()
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment2/ProgrammingAssignment2/cachematrixTests.R')
test.cachematrix()
source('~/rwork/johnHopkins/programmingWithR/assignments/assignment2/ProgrammingAssignment2/cachematrixTests.R')
test.cachematrix()
